name: "CI"
on:
  # So that PRs touching the same files as the push are updated
  push:
  # So that the `dirtyLabel` is removed if conflicts are resolved
  pull_request_target:
    types: [synchronize]
  # For integration testing of fork PRs
  pull_request:
    types: [synchronize]

jobs:
  main:
    runs-on: ubuntu-latest
    steps:
      - name: checkout
        uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: "20"
      - name: Install dependencies
        run: yarn
      - name: Format
        run: yarn format
      - name: Check format
        run: git diff --exit-code
      - name: Build
        run: yarn build
      - name: Checked in build?
        run: git diff --exit-code
      # tried to use https://github.community/t5/GitHub-Actions/Usage-of-expressions-and-contexts-in-uses-clause/m-p/39507/highlight/false#M3837
      # but doesn't seem to work
      - name: Test (PR)
        id: test-pr
        # Add your repository and branch here to test your changes
        # e.g. eps1lon/actions-label-merge-conflict@feat/retry-unknown
        uses: ./
        with:
          # pull_requests don't have access to secrets
          continueOnMissingPermissions: "${{ github.event.action == 'synchronize' }}"
          dirtyLabel: "PR: needs rebase"
          removeOnDirtyLabel: "PR: ready to ship"
          repoToken: "${{ secrets.GITHUB_TOKEN }}"
          commentOnDirty: "This pull request has conflicts, please resolve those before we can evaluate the pull request."
          commentOnClean: "Conflicts have been resolved. A maintainer will review the pull request shortly."
      - name: Check output (PR)
        run: echo "Generated output ${{ steps.test-pr.outputs.prDirtyStatuses }}"
      - name: Test
        id: test-main
        uses: eps1lon/actions-label-merge-conflict@main
        with:
          # pull_requests don't have access to secrets
          continueOnMissingPermissions: "${{ github.event.action == 'synchronize' }}"
          dirtyLabel: "PR: needs rebase"
          removeOnDirtyLabel: "PR: ready to ship"
          repoToken: "${{ secrets.GITHUB_TOKEN }}"
          commentOnDirty: "This pull request has conflicts, please resolve those before we can evaluate the pull request."
          commentOnClean: "Conflicts have been resolved. A maintainer will review the pull request shortly."
      - name: Check output
        run: echo "Generated output ${{ steps.test-main.outputs.prDirtyStatuses }}"
